name: Discover Prophet Daily Update (Docs Only)

on:
  schedule:
    # Esegue alle 30 min di ogni ora UTC tra le 7:00 e le 17:00 (copre 9:30-18:30 Roma)
    - cron: '30 6-19 * * *'

  # Permette l'esecuzione manuale
  workflow_dispatch:

jobs:
  update-trends:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9' # O successiva

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Installa librerie necessarie per script V7.8 (con Saturation)
          pip install curl_cffi pandas numpy requests beautifulsoup4 tqdm cloudscraper fake-useragent openai pytrends==4.9.2 urllib3

      - name: Create required directories (docs & checkpoint)
        run: |
          mkdir -p docs
          mkdir -p checkpoint_data
          # Non crea pi√π la cartella 'templates'

      # --- Nessuno step per copiare template ---

      - name: Run Discover Prophet script (V7.8 with Saturation)
        env:
          # Passa i secrets alle variabili d'ambiente attese dallo script
          # !!! ASSICURATI CHE I NOMI DEI SECRET QUI SOTTO (OpenAI_API, DATA_FOR_SEO) corrispondano ESATTAMENTE ai nomi dei secret nelle impostazioni del tuo repository !!!
          OPENAI_API_KEY: ${{ secrets.OpenAI_API }}  # Nome variabile usata in os.getenv()
          DATA_FOR_SEO: ${{ secrets.DATA_FOR_SEO }}    # <<<=== RIGA AGGIUNTA CORRETTA
        # Assicurati che il nome del file .py sia corretto
        run: python discover_prophet.py

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"

      - name: Commit and push changes
        run: |
          # Controlla se ci sono cambiamenti in docs/ o checkpoint_data/
          if [[ -z $(git status --porcelain docs checkpoint_data) ]]; then
            echo "No changes detected in docs/ or checkpoint_data/. Nothing to commit."
            exit 0
          fi

          echo "Changes detected. Committing and pushing..."
          # Aggiunge i file generati/modificati nelle cartelle specificate
          git add docs/
          git add checkpoint_data/
          # Considera di aggiungere un .gitignore per escludere file non voluti in checkpoint_data se necessario
          git commit -m "Update trends data [skip ci]: $(date +'%Y-%m-%d %H:%M:%S UTC')"
          # Usa '|| exit 1' per far fallire lo step se il push non riesce (es. per conflitti o permessi)
          git push || exit 1
